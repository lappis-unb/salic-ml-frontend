stages:
    - build
    - deploy_homolog


variables:
    FRONTEND_IMAGE: $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_REF_NAME

build:
    image: docker:latest
    stage: build
    services:
        - docker:dind
    script:
        - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
        - docker build -f ./docker/dev/Dockerfile -t $FRONTEND_IMAGE .
        - docker tag $FRONTEND_IMAGE $CI_REGISTRY_IMAGE/frontend:latest
        - docker push $FRONTEND_IMAGE
        - docker push $CI_REGISTRY_IMAGE/frontend:latest
    only:
        - /master|homolog|docker/
    tags:
        - docker

deploy_homolog_minc:
    image: debian:buster-slim
    stage: deploy_homolog
    services:
        - docker:dind
    script:
        - apt update
        - apt install sshpass openssh-client -y
        - mkdir ~/.ssh
        - touch ~/.ssh/known_hosts
        - ssh-keyscan -H $SSH_IP >> ~/.ssh/known_hosts
        - sshpass -p $SSH_PASSWORD ssh $SSH_USER@$SSH_IP "sshpass -p $SSH_VPN_PASSWORD ssh $SSH_VPN_USER@$SSH_VPN_IP 'cd salic-ml-frontend/; echo $SSH_VPN_PASSWORD | sudo -S docker-compose pull; echo $SSH_VPN_PASSWORD | sudo -S docker-compose up -d'"
    only:
        - /homolog|docker/
